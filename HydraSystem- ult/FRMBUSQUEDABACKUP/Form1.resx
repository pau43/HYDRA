<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnPreview.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAAK+/+WRudgAAACBjSFJNAACH
        CAAAjBkAAPlXAACFLQAAe3EAAOugAAA/xAAAIfGatSBVAAABj2lDQ1BpY2MAACjPrZK/S8NAFMe/iUhB
        qiC2KoKQQWqHKrFdWhCh7aBSh1oK1W5pEtNCTUMSq66Ce8FJcfAHCIKIOIhj/4BugiCKIAiuQsFBLfEu
        p3SqLn7huM973N2777sD+LpkGGUewKpum5nZhLC0nBc8d/CgB64k2TLi6fQCOurtFhydbyboWf7LLWn3
        fUpLSaefL3r/PX6X1yQFAc5H2KcxDlIuMJ6mvG4bNuE0ZbkoKYTJQMjMZpKEa4T7NMYHlAuMLyhXZY3u
        rRMWdaWkE34lHFVUSyb+aS1bNkyyht8nPEb9s6vZKWBmFOhqtHN5Czg7AYYC7VxwGPDngOtIO9dcdHvC
        DTaslUjYTXHeBND96DjNAODZAVo1x/k4cpzWManxANR1ec2sfveF42PAXzHzxmL2Bi6hEzP/rkTgcA7I
        kVdObQN7T8D4OTBwBaR7gWwMfPT5Z7BeuRpJSuVSwZRsVRHod0lWyhXTMiRZxf/KVjdcb8mKsWmWtKIt
        xMnvUkPCvC5PhoSwKMbwBQzBdk2Y60qEAAAABmJLR0QA/wD/AP+gvaeTAAAACXZwQWcAAAAQAAAAEABc
        xq3DAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDA5LTA5LTEzVDE1OjU0OjQ1KzAyOjAwu6uiPAAAACV0RVh0
        ZGF0ZTptb2RpZnkAMjAwOS0wOS0xM1QxNTo1NDo0NSswMjowMMr2GoAAAAJiSURBVDhPvZBLbBJRFIYv
        tIJtTKOpgbhoZRZsWhKIphE2NunWbqoxmnaBa7ZduKlL3bixxMSFSxgk8kiaGvuY6QQoVJB37Yw8hkd5
        OSBtJ33pop3rBSeRKtqdX/Ln5J5z/nPPveBvQAgBFE5RFKTfD/dlfOOLdK9eE6vnkPlMAzZFy5lUepJO
        s/ObTMoaicZeBIOhSYbe6ksmEmJnF7xeD/AvL/R4g5FZP10Mxiv7K5mvx4uFOk8w2Xwklc48+3Z01M/z
        vOj4jcCHEFj3+2+SyTxFVk7tfg7isSbE0zzESweCPVdthArbpfvFcgUwDCO6OiiUqyAcjT+KVg4ITw3i
        ZBXaqBq0bXDQltiBONM4fvcx/ul5q5cgiLbnDJksC8Lh8DTL8cHkLrRucIJtrXxiXy2d2KmqYFsv7i++
        Jz3tATiOtz1nSKAPSsTjWDZfCDClBrXJHTsD24cuInfgWmYPF9Zi6bjT5X6wQlJgbm5OdHUgCEK7sLS0
        NLOyStSTTIbdKtQ2M7W9rSK3y3p86y/v3Z0atFosoqMDmqZBLpfrLZfLmM/ne2qxWGYdDsdjp9P5mqKo
        eZJYnR4fv30dtfb9dHSgUqlAs9kEJpPpodlsLrnd7jc6ne4KKl1GGkS6itQ6X0KSIv1CLpeDiYkJoNfr
        b4yNjWWHhoZOjUbjE6lU2jJeQOpB6hXjn2i1WqDRaK4ZDAZSoVBAlHork8kwFC+2G/7F6OgoUKvV/cj8
        CsMwKJFIoiitQ2rdfD4jIyOtIbfQBjsDAwMcSt1B6r5qN4aHhwF6cz+KM0qlcgqlWm/9XwDwAxJEK1cf
        SbSxAAAAAElFTkSuQmCC
</value>
  </data>
</root>